<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2020.2.10">
  <Settings>
    <Param name="Audio latency priority" updates="None" val="use prefs" valType="str"/>
    <Param name="Audio lib" updates="None" val="use prefs" valType="str"/>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data file delimiter" updates="None" val="auto" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant':'', 'session':'001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Resources" updates="None" val="[]" valType="fileList"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="height" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="(1024, 768)" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="$[0,0,0]" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="AB_pic" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <VariableComponent name="curOpacity3">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="curOpacity3" valType="code"/>
        <Param name="saveEndExp" updates="constant" val="False" valType="bool"/>
        <Param name="saveEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="saveFrameValue" updates="constant" val="never" valType="str"/>
        <Param name="saveStartExp" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startExpValue" updates="constant" val="" valType="code"/>
        <Param name="startFrameValue" updates="None" val="" valType="code"/>
        <Param name="startRoutineValue" updates="constant" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
      </VariableComponent>
      <VariableComponent name="maskCol">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="maskCol" valType="code"/>
        <Param name="saveEndExp" updates="constant" val="False" valType="bool"/>
        <Param name="saveEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="saveFrameValue" updates="constant" val="never" valType="str"/>
        <Param name="saveStartExp" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startExpValue" updates="constant" val="" valType="code"/>
        <Param name="startFrameValue" updates="None" val="" valType="code"/>
        <Param name="startRoutineValue" updates="constant" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
      </VariableComponent>
      <VariableComponent name="curOpacity2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="curOpacity2" valType="code"/>
        <Param name="saveEndExp" updates="constant" val="False" valType="bool"/>
        <Param name="saveEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="saveFrameValue" updates="constant" val="never" valType="str"/>
        <Param name="saveStartExp" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startExpValue" updates="constant" val="" valType="code"/>
        <Param name="startFrameValue" updates="None" val="" valType="code"/>
        <Param name="startRoutineValue" updates="constant" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
      </VariableComponent>
      <VariableComponent name="curOpacity">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="curOpacity" valType="code"/>
        <Param name="saveEndExp" updates="constant" val="False" valType="bool"/>
        <Param name="saveEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="saveFrameValue" updates="constant" val="never" valType="str"/>
        <Param name="saveStartExp" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startExpValue" updates="constant" val="" valType="code"/>
        <Param name="startFrameValue" updates="None" val="" valType="code"/>
        <Param name="startRoutineValue" updates="constant" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
      </VariableComponent>
      <VariableComponent name="curImage">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="curImage" valType="code"/>
        <Param name="saveEndExp" updates="constant" val="False" valType="bool"/>
        <Param name="saveEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="saveFrameValue" updates="constant" val="never" valType="str"/>
        <Param name="saveStartExp" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startExpValue" updates="constant" val="" valType="code"/>
        <Param name="startFrameValue" updates="None" val="" valType="code"/>
        <Param name="startRoutineValue" updates="constant" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
      </VariableComponent>
      <CodeComponent name="code">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="import random&amp;#10;&amp;#10;&amp;#10;maskCol = [random.random(), random.random(), random.random()]&amp;#10;        &amp;#10;&amp;#10;folder = 'C:\\Users\\Employee\\Google Drive\\UP\\MyResearch\\TaskProgramming\\AB_pic\\resources\\'&amp;#10;picFiles = os.listdir(folder)&amp;#10;&amp;#10;picFiles = np.random.choice(picFiles, 40, False)&amp;#10;&amp;#10;curOpacity = 0&amp;#10;curOpacity2 = 0&amp;#10;curOpacity3 = 0&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="import * as random from 'random';&amp;#10;var curOpacity, curOpacity2, curOpacity3, folder, maskCol, picFiles;&amp;#10;maskCol = [random.random(), random.random(), random.random()];&amp;#10;folder = &quot;C:\\Users\\Employee\\Google Drive\\UP\\MyResearch\\TaskProgramming\\AB_pic\\resources\\&quot;;&amp;#10;picFiles = os.listdir(folder);&amp;#10;picFiles = np.random.choice(picFiles, 40, false);&amp;#10;curOpacity = 0;&amp;#10;curOpacity2 = 0;&amp;#10;curOpacity3 = 0;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="curSet = np.random.choice(picFiles, 17, false);&amp;#10;shuffle(curSet);&amp;#10;for (var kk = 0, _pj_a = 17; (kk &lt; _pj_a); kk += 1) {&amp;#10;    trials.addData((&quot;img&quot; + kk.toString()), curSet[kk]);&amp;#10;}&amp;#10;ii = 0;&amp;#10;curImage = (folder + curSet[ii]);&amp;#10;checkForOff = true;&amp;#10;checkForOn = false;&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="#get the images for the current trial: &amp;#10;&amp;#10;curSet = np.random.choice(picFiles,17, False)&amp;#10;shuffle(curSet)&amp;#10;for kk in range(0,17):&amp;#10;    trials.addData('img'+str(kk), curSet[kk])&amp;#10;&amp;#10;ii = 0&amp;#10;curImage = folder + curSet[ii]&amp;#10;checkForOff = True&amp;#10;checkForOn = False" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="t = trialClock.getTime()&amp;#10;onSets = np.linspace(stimLen+isi, (stimLen+isi)*15, 15)&amp;#10;offSets = np.linspace(stimLen, (stimLen+isi)*15 - isi, 15)&amp;#10;if checkForOff: #there's an image on screen and we need to know to take it off&amp;#10;    if t&gt;offSets[ii]:&amp;#10;        print(str(t) + &quot;offset!&quot;)&amp;#10;        curOpacity2 = 1&amp;#10;        maskCol = [random.random(), random.random(), random.random()]&amp;#10;        checkForOff = False&amp;#10;        checkForOn = True&amp;#10;else: #the mask is up right now, check for new image&amp;#10;    if t&gt;onSets[ii]:&amp;#10;        print(str(t) + &quot;onSet!&quot;)&amp;#10;        curOpacity2 = 0&amp;#10;        checkForOff = True&amp;#10;        checkForOn = False&amp;#10;        ii = ii + 1&amp;#10;        if ii==15:&amp;#10;            continueRoutine = False&amp;#10;        elif ii==T2_loc+3:&amp;#10;            trials.addData('lastPresent', ii-1)&amp;#10;            continueRoutine = False&amp;#10;        else:&amp;#10;            curImage = folder + curSet[ii]&amp;#10;            if T1_loc-1==ii:&amp;#10;                curOpacity = 1&amp;#10;            elif T2_loc-1==ii:&amp;#10;                curOpacity3 = 1&amp;#10;            else:&amp;#10;                curOpacity = 0&amp;#10;                curOpacity3 = 0&amp;#10;            &amp;#10;&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="t = trialClock.getTime();&amp;#10;onSets = np.linspace((stimLen + isi), ((stimLen + isi) * 15), 15);&amp;#10;offSets = np.linspace(stimLen, (((stimLen + isi) * 15) - isi), 15);&amp;#10;if (checkForOff) {&amp;#10;    if ((t &gt; offSets[ii])) {&amp;#10;        console.log((t.toString() + &quot;offset!&quot;));&amp;#10;        curOpacity2 = 1;&amp;#10;        maskCol = [random.random(), random.random(), random.random()];&amp;#10;        checkForOff = false;&amp;#10;        checkForOn = true;&amp;#10;    }&amp;#10;} else {&amp;#10;    if ((t &gt; onSets[ii])) {&amp;#10;        console.log((t.toString() + &quot;onSet!&quot;));&amp;#10;        curOpacity2 = 0;&amp;#10;        checkForOff = true;&amp;#10;        checkForOn = false;&amp;#10;        ii = (ii + 1);&amp;#10;        if ((ii === 15)) {&amp;#10;            continueRoutine = false;&amp;#10;        } else {&amp;#10;            if ((ii === (T2_loc + 3))) {&amp;#10;                trials.addData(&quot;lastPresent&quot;, (ii - 1));&amp;#10;                continueRoutine = false;&amp;#10;            } else {&amp;#10;                curImage = (folder + curSet[ii]);&amp;#10;                if (((T1_loc - 1) === ii)) {&amp;#10;                    curOpacity = 1;&amp;#10;                } else {&amp;#10;                    if (((T2_loc - 1) === ii)) {&amp;#10;                        curOpacity3 = 1;&amp;#10;                    } else {&amp;#10;                        curOpacity = 0;&amp;#10;                        curOpacity3 = 0;&amp;#10;                    }&amp;#10;                }&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code" valType="code"/>
      </CodeComponent>
      <PolygonComponent name="polygon">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,0,0]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="polygon" valType="code"/>
        <Param name="opacity" updates="set every frame" val="$curOpacity" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="triangle" valType="str"/>
        <Param name="size" updates="constant" val="(0.8, 0.8)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <PolygonComponent name="polygon_3">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[0,0,1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="polygon_3" valType="code"/>
        <Param name="opacity" updates="set every frame" val="$curOpacity3" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="star" valType="str"/>
        <Param name="size" updates="constant" val="(0.7, 0.7)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <ImageComponent name="displayPicture">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every frame" val="$curImage" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="displayPicture" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.25, 0.25)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <PolygonComponent name="polygon_2">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="set every frame" val="$[1,1,1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="0" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="polygon_2" valType="code"/>
        <Param name="opacity" updates="set every frame" val="$curOpacity2" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="rectangle" valType="str"/>
        <Param name="size" updates="constant" val="(0.25, 0.25)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
    </Routine>
    <Routine name="response1">
      <PolygonComponent name="polygon_4">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[1,0,0]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="polygon_4" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="triangle" valType="str"/>
        <Param name="size" updates="constant" val="(0.8, 0.8)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <CodeComponent name="code_2">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="flipper = false;&amp;#10;trials.addData(&quot;flipper&quot;, flipper);&amp;#10;options = [(folder + curSet[(T1_loc - 1)]), (folder + curSet[15]), (folder + curSet[(T2_loc - 1)]), (folder + curSet[16])];&amp;#10;shuffle(options);&amp;#10;opt1 = options[0];&amp;#10;opt2 = options[1];&amp;#10;opt3 = options[2];&amp;#10;opt4 = options[3];&amp;#10;trials.addData(&quot;opt1_t1&quot;, opt1);&amp;#10;trials.addData(&quot;opt2_t1&quot;, opt2);&amp;#10;trials.addData(&quot;opt3_t1&quot;, opt3);&amp;#10;trials.addData(&quot;opt4_t1&quot;, opt4);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="flipper = False&amp;#10;#if random.random()&gt;.5:&amp;#10;#    flipper = True&amp;#10;trials.addData('flipper', flipper)&amp;#10;&amp;#10;options = [folder + curSet[T1_loc-1], folder + curSet[15], folder + curSet[T2_loc-1], folder + curSet[16]]&amp;#10;shuffle(options)&amp;#10;opt1 = options[0]&amp;#10;opt2 = options[1]&amp;#10;opt3 = options[2]&amp;#10;opt4 = options[3]&amp;#10;trials.addData('opt1_t1', opt1)&amp;#10;trials.addData('opt2_t1', opt2)&amp;#10;trials.addData('opt3_t1', opt3)&amp;#10;trials.addData('opt4_t1', opt4)&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_2" valType="code"/>
      </CodeComponent>
      <ImageComponent name="option4_t1">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$opt4" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="option4_t1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.25, 0.25)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="option1_t1">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$opt1" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="option1_t1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-.3, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.25, 0.25)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="option2_t1">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$opt2" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="option2_t1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, .30)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.25, 0.25)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="option3_t1">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$opt3" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="option3_t1" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(.3, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.25, 0.25)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp">
        <Param name="allowedKeys" updates="constant" val="'left','right', 'down', 'up'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="response2">
      <PolygonComponent name="polygon_5">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="fillColor" updates="constant" val="$[0,0,1]" valType="str"/>
        <Param name="fillColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="lineColor" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="lineColorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="lineWidth" updates="constant" val="1" valType="code"/>
        <Param name="nVertices" updates="constant" val="4" valType="int"/>
        <Param name="name" updates="None" val="polygon_5" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="shape" updates="constant" val="star" valType="str"/>
        <Param name="size" updates="constant" val="(0.7, 0.7)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </PolygonComponent>
      <CodeComponent name="code_3">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="options = [(folder + curSet[(T1_loc - 1)]), (folder + curSet[15]), (folder + curSet[(T2_loc - 1)]), (folder + curSet[16])];&amp;#10;shuffle(options);&amp;#10;opt1 = options[0];&amp;#10;opt2 = options[1];&amp;#10;opt3 = options[2];&amp;#10;opt4 = options[3];&amp;#10;trials.addData(&quot;opt1_t1&quot;, opt1);&amp;#10;trials.addData(&quot;opt2_t1&quot;, opt2);&amp;#10;trials.addData(&quot;opt3_t1&quot;, opt3);&amp;#10;trials.addData(&quot;opt4_t1&quot;, opt4);&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="options = [folder + curSet[T1_loc-1], folder + curSet[15], folder + curSet[T2_loc-1], folder + curSet[16]]&amp;#10;shuffle(options)&amp;#10;opt1 = options[0]&amp;#10;opt2 = options[1]&amp;#10;opt3 = options[2]&amp;#10;opt4 = options[3]&amp;#10;trials.addData('opt1_t1', opt1)&amp;#10;trials.addData('opt2_t1', opt2)&amp;#10;trials.addData('opt3_t1', opt3)&amp;#10;trials.addData('opt4_t1', opt4)&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_3" valType="code"/>
      </CodeComponent>
      <ImageComponent name="option1_t2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$opt1" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="option1_t2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(-0.3, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.25, 0.25)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="option2_t2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$opt2" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="option2_t2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, .3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.25, 0.25)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="option3_t2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$opt3" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="option3_t2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(.3, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.25, 0.25)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <ImageComponent name="option4_t2">
        <Param name="color" updates="constant" val="$[1,1,1]" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flipHoriz" updates="constant" val="False" valType="bool"/>
        <Param name="flipVert" updates="constant" val="False" valType="bool"/>
        <Param name="image" updates="set every repeat" val="$opt4" valType="str"/>
        <Param name="interpolate" updates="constant" val="linear" valType="str"/>
        <Param name="mask" updates="constant" val="None" valType="str"/>
        <Param name="name" updates="None" val="option4_t2" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, -.3)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="size" updates="constant" val="(0.25, 0.25)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="texture resolution" updates="constant" val="128" valType="code"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_2">
        <Param name="allowedKeys" updates="constant" val="'left','right', 'up', 'down'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_2" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="break_2">
      <VariableComponent name="breakText">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="breakText" valType="code"/>
        <Param name="saveEndExp" updates="constant" val="False" valType="bool"/>
        <Param name="saveEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="saveFrameValue" updates="constant" val="never" valType="str"/>
        <Param name="saveStartExp" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startExpValue" updates="constant" val="&quot;&quot;" valType="code"/>
        <Param name="startFrameValue" updates="None" val="" valType="code"/>
        <Param name="startRoutineValue" updates="constant" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
      </VariableComponent>
      <VariableComponent name="breakTime">
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="name" updates="None" val="breakTime" valType="code"/>
        <Param name="saveEndExp" updates="constant" val="False" valType="bool"/>
        <Param name="saveEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="saveFrameValue" updates="constant" val="never" valType="str"/>
        <Param name="saveStartExp" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartRoutine" updates="constant" val="False" valType="bool"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startExpValue" updates="constant" val=".1" valType="code"/>
        <Param name="startFrameValue" updates="None" val="" valType="code"/>
        <Param name="startRoutineValue" updates="constant" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="False" valType="bool"/>
      </VariableComponent>
      <CodeComponent name="code_4">
        <Param name="Before Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Before JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="try {&amp;#10;    cur = [40, 80, 120].index(trials.thisTrialN);&amp;#10;    breakTime = 10000;&amp;#10;    if ((cur === 0)) {&amp;#10;        breakText = &quot;Take a break! you are 25% of the way through. Press SPACEBAR when you're ready to continue.&quot;;&amp;#10;    } else {&amp;#10;        if ((cur === 1)) {&amp;#10;            breakText = &quot;Take a break! you are 50% of the way through. Press SPACEBAR when you're ready to continue.&quot;;&amp;#10;        } else {&amp;#10;            breakText = &quot;Take a break! you are 75% of the way through. Press SPACEBAR when you're ready to continue.&quot;;&amp;#10;        }&amp;#10;    }&amp;#10;} catch(e) {&amp;#10;    breakTime = 0.01;&amp;#10;    breakText = &quot;&quot;;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="try:&amp;#10;    cur = [40,80,120].index(trials.thisTrialN) &amp;#10;    breakTime = 10000&amp;#10;    if cur==0:&amp;#10;        breakText = &quot;Take a break! you are 25% of the way through. Press SPACEBAR when you're ready to continue.&quot;&amp;#10;    elif cur==1:&amp;#10;        breakText = &quot;Take a break! you are 50% of the way through. Press SPACEBAR when you're ready to continue.&quot;&amp;#10;    else:&amp;#10;        breakText = &quot;Take a break! you are 75% of the way through. Press SPACEBAR when you're ready to continue.&quot;&amp;#10;except: &amp;#10;    breakTime = .01&amp;#10;    breakText = &quot;&quot;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Auto-&gt;JS" valType="str"/>
        <Param name="Each Frame" updates="constant" val="if breakTime&lt;1:&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="if ((breakTime &lt; 1)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="name" updates="None" val="code_4" valType="code"/>
      </CodeComponent>
      <TextComponent name="text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$breakTime" valType="code"/>
        <Param name="syncScreenRefresh" updates="None" val="True" valType="bool"/>
        <Param name="text" updates="set every repeat" val="$breakText" valType="extendedStr"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="disabled" updates="None" val="False" valType="bool"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="key_resp_3" valType="code"/>
        <Param name="saveStartStop" updates="None" val="True" valType="bool"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="last key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 4), ('gap', 0.09), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 6), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 8), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 102), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 3), ('gap', 0.03), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 3), ('gap', 0.18), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 5), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 5), ('gap', 0.15), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 10), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 4), ('gap', 0.09), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 5), ('gap', 0.15), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 7), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 5), ('gap', 0.06), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 4), ('gap', 0.12), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 11), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 12), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 5), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 5), ('gap', 0.15), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 3), ('gap', 0.18), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 3), ('gap', 0.03), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 5), ('gap', 0.06), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 104), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 6), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 3), ('gap', 0.03), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 4), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 104), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 5), ('gap', 0.03), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 11), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 4), ('gap', 0.03), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 4), ('gap', 0.12), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 104), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 10), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 10), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 5), ('gap', 0.18), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 12), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 4), ('gap', 0.15), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 4), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 5), ('gap', 0.12), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 4), ('gap', 0.15), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 5), ('gap', 0.09), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 11), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 4), ('gap', 0.09), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 11), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 3), ('gap', 0.09), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 5), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 9), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 5), ('gap', 0.09), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 11), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 11), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 4), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 5), ('gap', 0.06), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 12), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 10), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 4), ('gap', 0.12), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 4), ('gap', 0.06), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 4), ('gap', 0.12), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 10), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 3), ('gap', 0.06), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 3), ('gap', 0.15), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 104), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 7), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 5), ('gap', 0.12), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 102), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 4), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 5), ('gap', 0.09), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 4), ('gap', 0.03), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 5), ('gap', 0.06), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 7), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 7), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 10), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 5), ('gap', 0.06), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 10), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 4), ('gap', 0.06), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 102), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 5), ('gap', 0.12), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 3), ('gap', 0.09), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 8), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 10), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 11), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 5), ('gap', 0.12), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 3), ('gap', 0.03), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 6), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 5), ('gap', 0.09), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 9), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 3), ('gap', 0.03), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 8), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 3), ('gap', 0.15), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 3), ('gap', 0.12), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 3), ('gap', 0.03), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 4), ('gap', 0.03), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 10), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 5), ('gap', 0.15), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 8), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 8), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 10), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 4), ('gap', 0.12), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 10), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 9), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 102), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 3), ('gap', 0.03), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 5), ('gap', 0.12), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 12), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 8), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 6), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 3), ('gap', 0.06), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 5), ('gap', 0.09), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 5), ('gap', 0.03), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 3), ('gap', 0.15), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 104), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 9), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 10), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 5), ('gap', 0.09), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 12), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 5), ('gap', 0.12), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 5), ('gap', 0.18), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 4), ('gap', 0.18), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 4), ('gap', 0.18), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 3), ('gap', 0.18), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 5), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 104), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 8), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 12), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 4), ('gap', 0.06), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 4), ('gap', 0.15), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 7), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 3), ('gap', 0.09), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 102), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 10), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 11), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 3), ('gap', 0.18), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 5), ('gap', 0.06), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 8), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 3), ('gap', 0.09), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 9), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 3), ('gap', 0.18), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 4), ('gap', 0.09), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 5), ('gap', 0.12), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 102), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 102), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 10), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 4), ('gap', 0.03), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 11), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 3), ('gap', 0.18), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 4), ('gap', 0.06), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 6), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 6), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 7), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 3), ('gap', 0.06), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 10), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 5), ('gap', 0.18), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 3), ('gap', 0.15), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 7), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 104), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 6), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 4), ('gap', 0.09), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 4), ('gap', 0.06), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 4), ('gap', 0.18), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 5), ('gap', 0.15), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 102), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 4), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 4), ('gap', 0.18), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 3), ('gap', 0.15), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 5), ('gap', 0.18), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 4), ('gap', 0.12), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 10), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 4), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 6), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 104), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 5), ('gap', 0.03), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 3), ('gap', 0.15), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 104), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 4), ('gap', 0.15), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 3), ('gap', 0.18), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 10), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 3), ('gap', 0.09), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 5), ('gap', 0.15), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 9), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 9), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 3), ('gap', 0.15), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 10), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 6), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 5), ('gap', 0.15), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 6), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 5), ('gap', 0.18), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 3), ('gap', 0.03), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 6), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 6), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 4), ('gap', 0.03), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 4), ('gap', 0.06), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 9), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 5), ('gap', 0.18), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 10), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 104), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 5), ('gap', 0.15), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 4), ('gap', 0.09), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 102), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 102), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 7), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 5), ('gap', 0.03), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 9), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 6), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 3), ('gap', 0.09), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 12), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 4), ('gap', 0.06), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap150'), ('lag', 2), ('T1_loc', 4), ('gap', 0.15), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 11), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 8), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 6), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 5), ('gap', 0.09), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 4), ('gap', 0.12), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 11), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 3), ('gap', 0.03), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 7), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 3), ('gap', 0.12), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 9), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 3), ('gap', 0.18), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 104), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 4), ('gap', 0.06), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 11), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 104), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 5), ('gap', 0.03), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap30'), ('lag', 2), ('T1_loc', 3), ('gap', 0.03), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap90'), ('lag', 2), ('T1_loc', 3), ('gap', 0.09), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 5), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 3), ('gap', 0.06), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag4'), ('lag', 4), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 7), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 5), ('gap', 0.18), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag2'), ('lag', 2), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 5), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 9), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 11), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap180'), ('lag', 2), ('T1_loc', 3), ('gap', 0.18), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 104), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 3), ('gap', 0.12), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 5), ('gap', 0.12), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag3'), ('lag', 3), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 6), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag5'), ('lag', 5), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 9), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 4), ('gap', 0.12), ('T2_loc', 6), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 8), ('primePos', 6), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 11), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 103), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'prime'), ('lag', 4), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 9), ('primePos', 7), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag1'), ('lag', 1), ('T1_loc', 4), ('gap', 0.0), ('T2_loc', 5), ('primePos', 103), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 9), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap120'), ('lag', 2), ('T1_loc', 3), ('gap', 0.12), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag7'), ('lag', 7), ('T1_loc', 5), ('gap', 0.0), ('T2_loc', 12), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 3), ('gap', 0.06), ('T2_loc', 5), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'lag6'), ('lag', 6), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 9), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'T2absent'), ('lag', 99), ('T1_loc', 3), ('gap', 0.0), ('T2_loc', 102), ('primePos', 102), ('stimLen', 2), ('isi', 0.04)]), OrderedDict([('trialType', 'AB'), ('cndTyp', 'gap60'), ('lag', 2), ('T1_loc', 5), ('gap', 0.06), ('T2_loc', 7), ('primePos', 104), ('stimLen', 2), ('isi', 0.04)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="conditionAB.xlsx" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <Routine name="response1"/>
    <Routine name="response2"/>
    <Routine name="break_2"/>
    <LoopTerminator name="trials"/>
  </Flow>
</PsychoPy2experiment>
